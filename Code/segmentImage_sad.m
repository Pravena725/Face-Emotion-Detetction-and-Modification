function [BW,maskedImage] = segmentImage_sad(sad_lip_RGB)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the imageSegmenter app. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 17-Apr-2021
%----------------------------------------------------


% Convert RGB image into L*a*b* color space.
X = rgb2lab(sad_lip_RGB);

% Graph cut
foregroundInd
backgroundInd = [2471 2907 2910 2913 2916 2918 3095 3248 3272 3273 3417 3448 3587 3624 3929 3974 4323 4446 4498 4673 4755 4756 4788 4790 4791 4792 4848 4928 4960 5100 5104 5132 5196 5245 5272 5300 5303 5451 5645 5718 5940 5962 5989 6066 6306 6490 6509 6587 6808 6825 6853 6934 7503 7516 7529 7547 7629 7851 8066 8149 8199 8207 8393 8546 8669 8720 8722 8724 8758 9189 9277 9950 10057 10142 10578 10815 10925 11179 11272 11334 11446 11621 11796 11811 11813 11976 11980 11983 11988 12027 12044 12338 12374 12389 12547 12565 12720 12739 12861 12894 12905 13072 13087 13210 13435 13732 14080 14479 14601 14827 15122 15175 15295 15696 15816 15990 16513 16738 17037 18084 18125 18298 18608 18645 18819 18957 18992 19132 19480 19686 19828 20175 20553 20899 21044 21593 22087 22459 22609 22807 23154 23305 23675 23827 24349 24545 24697 25219 25413 25567 25761 26089 26283 26457 26612 27135 27152 27500 27658 28022 28180 28544 28703 29066 29400 29414 29588 30096 30110 30444 30633 30793 31141 31315 31489 31503 31662 32010 32547 33227 33593 34270 34463 34792 35314 35681 35836 36358 36550 36706 36898 37053 37072 37246 37575 37593 37923 37941 38271 38289 38463 38793 38985 39141 39333 39681 39837 40029 40359 40551 40881 41074 41229 41597 41924 41945 42467 42620 42968 42989 43489 43511 43663 43685 43836 43859 44010 44033 44707 44729 45425 45753 45947 46121 46797 46817 47339 47494 48209 48712 48729 49077 49251 49425 49773 49930 49948 50297 50800 50994 51342 51670 51865 52213 52366 52909 53257 53431 53604 53756 53952 54278 54299 54993 55340 55493 55687 55860 56034 56381 56709 56729 57077 57425 57578 57600 58122 59141 59167 59488 59835 59865 60183 60356 60703 60876 61048 61432 61567 61974 62148 62303 62495 62496 63127 63191 63348 63362 63713 63994 64230 64408 64516 64915 65038 65097 65212 65388 65394 65398 65400 65402 65438 65752 65790 65799 66101 66136 66276 66829 66973 67191 67355 67523 67540 67566 67570 67668 67745 67908 67920 68186 68218 68251 68446 68565 68759 68770 68795 68875 69042 69099 69143 69210 69211 69261 69289 69383 69456 69462 69666 69804 69808 69980 69981 70079 70479 70536 70654 70828 70958 71192 71406 71487 71526 71715 71839 71876 71887 71888 71889 72051 72058 72059 72103 72117 72119 72120 72294 72364 72400 72401 72402 72404 72463 72469 72643 72715 72808 72810 72818 72819 72976 72981 72993 73064 73153 73168 73238 73344 73586 73696 74107 74221 74573 74627 74750 74927 75146 75280 75460 75491 75639 75641 75818 75822 75835 76003 ];
L = superpixels(X,483,'IsInputLab',true);

% Convert L*a*b* range to [0 1]
scaledX = prepLab(X);
BW = lazysnapping(scaledX,L,foregroundInd,backgroundInd);

% Create masked image.
maskedImage = sad_lip_RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;
end

function out = prepLab(in)

% Convert L*a*b* image to range [0,1]
out = in;
out(:,:,1) = in(:,:,1) / 100;  % L range is [0 100].
out(:,:,2) = (in(:,:,2) + 86.1827) / 184.4170;  % a* range is [-86.1827,98.2343].
out(:,:,3) = (in(:,:,3) + 107.8602) / 202.3382;  % b* range is [-107.8602,94.4780].

end
